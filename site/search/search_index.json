{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Website Tracker Documentation","text":"<p>An AI-powered website monitoring platform that provides real-time change detection and insights across multiple websites.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Real-time website monitoring with advanced change detection</li> <li>AI-powered analysis using OpenAI integration</li> <li>Visual diff highlighting for easy comparison</li> <li>Personalized monitoring preferences</li> <li>Progress tracking with dynamic visual feedback</li> <li>Comprehensive timeline visualization</li> <li>Automated significance scoring of changes</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Getting Started Guide</li> <li>API Documentation</li> <li>Contributing Guidelines</li> </ul>"},{"location":"#system-requirements","title":"System Requirements","text":"<ul> <li>Python 3.11 or higher</li> <li>OpenAI API key for change analysis</li> <li>Chrome/Firefox for web scraping</li> <li>Internet connection for real-time monitoring</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<p>The application leverages: - Python 3.11 backend for robust processing - Streamlit web interface for intuitive interaction - OpenAI integration for intelligent change analysis - Selenium and WebDriver for reliable web scraping - Advanced diff visualization technology - Real-time notification system</p>"},{"location":"#status","title":"Status","text":"<ul> <li>Build Status</li> <li>Documentation</li> <li>Latest Release</li> </ul> <p>For more detailed information, please refer to our documentation sections.</p>"},{"location":"api/","title":"API Documentation","text":""},{"location":"api/#overview","title":"Overview","text":"<p>The Website Tracker API provides programmatic access to website monitoring and change detection features. This documentation covers the core components and their usage.</p>"},{"location":"api/#core-components","title":"Core Components","text":""},{"location":"api/#change-detection","title":"Change Detection","text":"<p>The change detection system provides APIs for: - Detecting content changes - Analyzing modifications - Scoring change significance - Visual difference highlighting</p>"},{"location":"api/#timeline-visualization","title":"Timeline Visualization","text":"<p>The timeline visualization component offers: - Change history tracking - Visual representation of changes - Filtering and sorting capabilities - Export functionality</p>"},{"location":"api/#authentication","title":"Authentication","text":"<p>API access requires authentication using environment variables: - <code>OPENAI_API_KEY</code>: Required for AI-powered change analysis - Additional keys may be required based on configuration</p>"},{"location":"api/#rate-limits","title":"Rate Limits","text":"<ul> <li>Standard rate limits apply to API endpoints</li> <li>Batch operations are recommended for multiple requests</li> <li>Consider caching frequently accessed data</li> </ul>"},{"location":"api/#error-handling","title":"Error Handling","text":"<p>All API endpoints follow standard HTTP status codes: - 200: Success - 400: Bad Request - 401: Unauthorized - 403: Forbidden - 404: Not Found - 500: Internal Server Error</p>"},{"location":"api/#getting-started","title":"Getting Started","text":"<p>See the individual API component documentation for detailed usage instructions: - Change Detection API - Timeline Visualization API</p>"},{"location":"api/change-detection/","title":"Change Detection API","text":""},{"location":"api/change-detection/#overview","title":"Overview","text":"<p>The Change Detection API provides programmatic access to monitor and detect changes in websites. This document covers the core components and their usage.</p>"},{"location":"api/change-detection/#components","title":"Components","text":""},{"location":"api/change-detection/#changedetector","title":"ChangeDetector","text":"<p>The <code>ChangeDetector</code> class is responsible for identifying changes in website content:</p> <pre><code>from change_detector import ChangeDetector\n\ndetector = ChangeDetector()\nchanges = detector.detect_changes(content)\n</code></pre>"},{"location":"api/change-detection/#methods","title":"Methods","text":"<ul> <li><code>detect_changes(content: Dict[str, Any]) -&gt; List[Dict[str, Any]]</code></li> <li>Detects changes between current and previous content</li> <li>Returns a list of detected changes with metadata</li> </ul>"},{"location":"api/change-detection/#changescorer","title":"ChangeScorer","text":"<p>The <code>ChangeScorer</code> class analyzes and scores detected changes:</p> <pre><code>from change_scorer import ChangeScorer\n\nscorer = ChangeScorer()\nscored_changes = scorer.score_changes(changes)\n</code></pre>"},{"location":"api/change-detection/#methods_1","title":"Methods","text":"<ul> <li><code>analyze_change(change: Dict[str, Any]) -&gt; Dict[str, Any]</code></li> <li>Analyzes a single change and returns significance score</li> <li><code>score_changes(changes: List[Dict[str, Any]]) -&gt; List[Dict[str, Any]]</code></li> <li>Scores multiple changes and sorts by significance</li> </ul>"},{"location":"api/change-detection/#change-types","title":"Change Types","text":"<p>The API detects various types of changes:</p> <ul> <li>Text changes</li> <li>Link additions/removals</li> <li>Visual changes</li> <li>Menu structure changes</li> <li>Style modifications</li> </ul>"},{"location":"api/change-detection/#example-usage","title":"Example Usage","text":"<pre><code>from change_detector import ChangeDetector\nfrom change_scorer import ChangeScorer\n\n# Initialize components\ndetector = ChangeDetector()\nscorer = ChangeScorer()\n\n# Detect changes\ncurrent_content = {\n    'text': 'Updated content',\n    'timestamp': '2024-01-29T12:00:00Z',\n    'pages': [{'url': 'example.com', 'location': '/'}]\n}\n\nchanges = detector.detect_changes(current_content)\nscored_changes = scorer.score_changes(changes)\n\n# Process scored changes\nfor change in scored_changes:\n    print(f\"Change type: {change['type']}\")\n    print(f\"Significance: {change['significance_score']}\")\n    print(f\"Analysis: {change['analysis']}\")\n</code></pre>"},{"location":"api/change-detection/#error-handling","title":"Error Handling","text":"<p>The API uses standard Python exceptions:</p> <ul> <li><code>ValueError</code>: Invalid input parameters</li> <li><code>KeyError</code>: Missing required fields</li> <li><code>Exception</code>: General errors during processing</li> </ul>"},{"location":"api/change-detection/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Monitoring</li> <li>Maintain consistent check intervals</li> <li> <p>Handle rate limits appropriately</p> </li> <li> <p>Error Handling</p> </li> <li>Implement proper exception handling</li> <li> <p>Log errors for debugging</p> </li> <li> <p>Performance</p> </li> <li>Cache frequently accessed data</li> <li> <p>Use batch processing for multiple changes</p> </li> <li> <p>Security</p> </li> <li>Validate input data</li> <li>Handle sensitive information securely</li> </ol>"},{"location":"api/timeline/","title":"Timeline Visualization API","text":""},{"location":"api/timeline/#overview","title":"Overview","text":"<p>The Timeline Visualization API provides tools to display and analyze website changes over time. This document covers the visualization components and their usage.</p>"},{"location":"api/timeline/#components","title":"Components","text":""},{"location":"api/timeline/#timelinevisualizer","title":"TimelineVisualizer","text":"<p>The <code>TimelineVisualizer</code> class manages the visualization of changes:</p> <pre><code>from timeline_visualizer import TimelineVisualizer\n\nvisualizer = TimelineVisualizer()\nvisualizer.visualize_timeline(changes)\n</code></pre>"},{"location":"api/timeline/#methods","title":"Methods","text":"<ul> <li><code>visualize_timeline(changes: List[Dict[str, Any]]) -&gt; None</code></li> <li>Creates an interactive timeline visualization</li> <li>Supports filtering and sorting options</li> </ul>"},{"location":"api/timeline/#visualization-features","title":"Visualization Features","text":"<ul> <li>Change significance indicators</li> <li>Interactive tooltips</li> <li>Filtering by date range</li> <li>Website-specific views</li> <li>Comparative analysis tools</li> </ul>"},{"location":"api/timeline/#configuration","title":"Configuration","text":""},{"location":"api/timeline/#significance-levels","title":"Significance Levels","text":"<p>The API uses color-coded significance levels:</p> <ul> <li>Critical (8-10): Major impact changes</li> <li>High (6-7): Significant modifications</li> <li>Medium (4-5): Moderate changes</li> <li>Low (1-3): Minor updates</li> </ul>"},{"location":"api/timeline/#display-options","title":"Display Options","text":"<pre><code># Example configuration\ntimeline_config = {\n    'max_entries': 100,\n    'group_by': 'url',\n    'sort_order': 'newest_first',\n    'highlight_changes': True\n}\n</code></pre>"},{"location":"api/timeline/#example-usage","title":"Example Usage","text":"<pre><code>from timeline_visualizer import TimelineVisualizer\nimport streamlit as st\n\n# Initialize visualizer\nvisualizer = TimelineVisualizer()\n\n# Example changes data\nchanges = [\n    {\n        'type': 'text_change',\n        'timestamp': '2024-01-29T12:00:00Z',\n        'location': '/homepage',\n        'significance_score': 8,\n        'analysis': {\n            'impact_category': 'Content',\n            'business_relevance': 'High'\n        }\n    }\n]\n\n# Display timeline\nvisualizer.visualize_timeline(changes)\n</code></pre>"},{"location":"api/timeline/#views-and-analysis","title":"Views and Analysis","text":""},{"location":"api/timeline/#comparison-view","title":"Comparison View","text":"<p>Compare changes between different timestamps:</p> <pre><code>visualizer._render_comparison_view(changes_df)\n</code></pre>"},{"location":"api/timeline/#analytics-view","title":"Analytics View","text":"<p>Display change statistics and trends:</p> <pre><code>visualizer._render_analytics_view(changes_df)\n</code></pre>"},{"location":"api/timeline/#best-practices","title":"Best Practices","text":"<ol> <li>Performance</li> <li>Limit the number of displayed entries</li> <li>Use efficient data structures</li> <li> <p>Implement pagination for large datasets</p> </li> <li> <p>User Experience</p> </li> <li>Provide clear visual indicators</li> <li>Maintain consistent styling</li> <li> <p>Include helpful tooltips</p> </li> <li> <p>Customization</p> </li> <li>Allow user preferences</li> <li>Support different visualization modes</li> <li>Enable export capabilities</li> </ol>"},{"location":"api/timeline/#integration","title":"Integration","text":"<p>The Timeline Visualization API integrates with:</p> <ul> <li>Streamlit components</li> <li>Change Detection API</li> <li>Data storage systems</li> </ul>"},{"location":"development/architecture/","title":"Architecture Overview","text":""},{"location":"development/architecture/#system-architecture","title":"System Architecture","text":"<p>The Website Tracker platform is built with a modular architecture focusing on scalability, maintainability, and extensibility. This document outlines the key components and their interactions.</p>"},{"location":"development/architecture/#core-components","title":"Core Components","text":""},{"location":"development/architecture/#1-change-detection-system","title":"1. Change Detection System","text":"<pre><code>graph TD\n    A[Website Scraper] --&gt; B[Change Detector]\n    B --&gt; C[Change Scorer]\n    C --&gt; D[Change Summarizer]\n    D --&gt; E[Timeline Visualizer]</code></pre>"},{"location":"development/architecture/#components","title":"Components:","text":"<ul> <li>Website Scraper: Fetches website content using Selenium</li> <li>Change Detector: Identifies content modifications</li> <li>Change Scorer: Evaluates change significance</li> <li>Change Summarizer: Generates AI-powered analysis</li> <li>Timeline Visualizer: Displays changes chronologically</li> </ul>"},{"location":"development/architecture/#2-frontend-interface","title":"2. Frontend Interface","text":"<p>The user interface is built using Streamlit, providing: - Interactive monitoring dashboard - Configuration management - Visual change comparison - Timeline visualization</p>"},{"location":"development/architecture/#3-data-flow","title":"3. Data Flow","text":"<pre><code>graph LR\n    A[Website Content] --&gt; B[Scraper]\n    B --&gt; C[Change Detection]\n    C --&gt; D[Analysis]\n    D --&gt; E[Storage]\n    E --&gt; F[Visualization]</code></pre>"},{"location":"development/architecture/#technical-stack","title":"Technical Stack","text":""},{"location":"development/architecture/#core-technologies","title":"Core Technologies","text":"<ul> <li>Python 3.11</li> <li>Streamlit</li> <li>OpenAI API</li> <li>Selenium WebDriver</li> <li>SQLite/PostgreSQL</li> </ul>"},{"location":"development/architecture/#key-libraries","title":"Key Libraries","text":"<ul> <li><code>diff-match-patch</code>: Text comparison</li> <li><code>Pillow</code>: Image processing</li> <li><code>pandas</code>: Data manipulation</li> <li><code>mkdocs</code>: Documentation</li> </ul>"},{"location":"development/architecture/#implementation-details","title":"Implementation Details","text":""},{"location":"development/architecture/#1-change-detection","title":"1. Change Detection","text":"<ul> <li>Uses diff algorithms for text comparison</li> <li>Implements visual diff highlighting</li> <li>Maintains change history</li> </ul>"},{"location":"development/architecture/#2-ai-integration","title":"2. AI Integration","text":"<ul> <li>OpenAI API for change analysis</li> <li>Automated significance scoring</li> <li>Natural language summaries</li> </ul>"},{"location":"development/architecture/#3-data-management","title":"3. Data Management","text":"<ul> <li>JSON-based configuration</li> <li>Efficient storage strategies</li> <li>Cache management</li> </ul>"},{"location":"development/architecture/#security-considerations","title":"Security Considerations","text":""},{"location":"development/architecture/#api-security","title":"API Security","text":"<ul> <li>Environment-based secret management</li> <li>Rate limiting implementation</li> <li>Secure API communication</li> </ul>"},{"location":"development/architecture/#data-protection","title":"Data Protection","text":"<ul> <li>Encrypted storage</li> <li>Access control</li> <li>Audit logging</li> </ul>"},{"location":"development/architecture/#performance-optimization","title":"Performance Optimization","text":""},{"location":"development/architecture/#caching-strategy","title":"Caching Strategy","text":"<ul> <li>Content caching</li> <li>Analysis results caching</li> <li>Image caching</li> </ul>"},{"location":"development/architecture/#resource-management","title":"Resource Management","text":"<ul> <li>Concurrent processing</li> <li>Batch operations</li> <li>Memory optimization</li> </ul>"},{"location":"development/architecture/#testing-strategy","title":"Testing Strategy","text":""},{"location":"development/architecture/#test-types","title":"Test Types","text":"<ol> <li>Unit Tests</li> <li>Component-level testing</li> <li> <p>Mock integration points</p> </li> <li> <p>Integration Tests</p> </li> <li>Cross-component functionality</li> <li> <p>API integration</p> </li> <li> <p>Performance Tests</p> </li> <li>Load testing</li> <li>Response time verification</li> </ol>"},{"location":"development/architecture/#deployment","title":"Deployment","text":""},{"location":"development/architecture/#requirements","title":"Requirements","text":"<ul> <li>Python 3.11+</li> <li>Required system dependencies</li> <li>Environment configuration</li> </ul>"},{"location":"development/architecture/#configuration","title":"Configuration","text":"<ul> <li>Environment variables</li> <li>API keys</li> <li>Monitoring settings</li> </ul>"},{"location":"development/architecture/#future-considerations","title":"Future Considerations","text":""},{"location":"development/architecture/#scalability","title":"Scalability","text":"<ul> <li>Distributed processing</li> <li>Load balancing</li> <li>Horizontal scaling</li> </ul>"},{"location":"development/architecture/#extensibility","title":"Extensibility","text":"<ul> <li>Plugin architecture</li> <li>Custom analyzers</li> <li>API extensions</li> </ul> <p>For implementation details, refer to the API Documentation.</p>"},{"location":"development/contributing/","title":"Contributing to Website Tracker","text":"<p>Thank you for your interest in contributing to Website Tracker! This guide will help you get started with contributing to the project.</p>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":"<ol> <li>Fork the repository</li> <li> <p>Clone your fork: <pre><code>git clone https://github.com/YOUR_USERNAME/website-tracker.git\ncd website-tracker\n</code></pre></p> </li> <li> <p>Create a new branch: <pre><code>git checkout -b feature/your-feature-name\n</code></pre></p> </li> <li> <p>Install development dependencies: <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> </ol>"},{"location":"development/contributing/#running-tests","title":"Running Tests","text":"<p>Run the test suite using pytest: <pre><code>python -m pytest\n</code></pre></p> <p>For coverage report: <pre><code>python -m pytest --cov=./ --cov-report=xml\n</code></pre></p>"},{"location":"development/contributing/#code-style","title":"Code Style","text":"<ul> <li>Follow PEP 8 guidelines</li> <li>Use type hints where possible</li> <li>Write docstrings for functions and classes</li> <li>Include tests for new features</li> </ul>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Update documentation for any new features</li> <li>Add or update tests as needed</li> <li>Ensure all tests pass</li> <li>Update CHANGELOG.md with your changes</li> <li>Submit a pull request to the <code>main</code> branch</li> </ol>"},{"location":"development/contributing/#commit-messages","title":"Commit Messages","text":"<p>Follow conventional commits format: - feat: New feature - fix: Bug fix - docs: Documentation changes - test: Adding or updating tests - refactor: Code refactoring - chore: Maintenance tasks</p>"},{"location":"development/contributing/#need-help","title":"Need Help?","text":"<ul> <li>Check existing issues and pull requests</li> <li>Create a new issue for discussion</li> <li>Join our community discussions</li> </ul>"},{"location":"guide/change-detection/","title":"Change Detection","text":""},{"location":"guide/change-detection/#overview","title":"Overview","text":"<p>The Website Tracker's change detection system provides robust capabilities for monitoring and analyzing website modifications. This guide explains how the system works and how to configure it for optimal use.</p>"},{"location":"guide/change-detection/#how-it-works","title":"How It Works","text":""},{"location":"guide/change-detection/#detection-process","title":"Detection Process","text":"<ol> <li>Content Scanning</li> <li>Regular website checks at configured intervals</li> <li>Content parsing and normalization</li> <li> <p>Hash-based comparison for quick change detection</p> </li> <li> <p>Change Analysis <pre><code>detector = ChangeDetector()\nchanges = detector.detect_changes(current_content)\n</code></pre></p> </li> </ol>"},{"location":"guide/change-detection/#types-of-changes-detected","title":"Types of Changes Detected","text":"<ul> <li>Text content modifications</li> <li>Link additions and removals</li> <li>Visual changes (layout, images)</li> <li>Menu structure updates</li> <li>Style modifications (fonts, colors)</li> </ul>"},{"location":"guide/change-detection/#configuration","title":"Configuration","text":""},{"location":"guide/change-detection/#basic-setup","title":"Basic Setup","text":"<pre><code>{\n  \"detection\": {\n    \"text_similarity_threshold\": 0.8,\n    \"visual_diff_threshold\": 0.1,\n    \"min_changes_to_report\": 1\n  }\n}\n</code></pre>"},{"location":"guide/change-detection/#advanced-options","title":"Advanced Options","text":"<ol> <li>Content Filtering</li> <li>Ignore patterns for dynamic content</li> <li>Focus areas for specific monitoring</li> <li> <p>Custom detection rules</p> </li> <li> <p>Visual Comparison</p> </li> <li>Screenshot-based detection</li> <li>Layout change detection</li> <li>Visual difference highlighting</li> </ol>"},{"location":"guide/change-detection/#ai-powered-analysis","title":"AI-Powered Analysis","text":"<p>The system uses OpenAI's GPT models to: - Score change significance - Categorize modifications - Generate natural language summaries - Provide business impact analysis</p>"},{"location":"guide/change-detection/#example-analysis-output","title":"Example Analysis Output","text":"<pre><code>{\n  \"significance_score\": 8,\n  \"analysis\": {\n    \"impact_category\": \"Content\",\n    \"business_relevance\": \"High\",\n    \"recommendations\": \"Review pricing changes immediately\"\n  }\n}\n</code></pre>"},{"location":"guide/change-detection/#best-practices","title":"Best Practices","text":"<ol> <li>Performance Optimization</li> <li>Set appropriate check intervals</li> <li>Use selective monitoring</li> <li> <p>Configure proper thresholds</p> </li> <li> <p>Accuracy Improvements</p> </li> <li>Define clear ignore patterns</li> <li>Calibrate sensitivity settings</li> <li> <p>Regular configuration reviews</p> </li> <li> <p>Resource Management</p> </li> <li>Balance frequency vs resources</li> <li>Implement caching strategies</li> <li>Use batch processing</li> </ol>"},{"location":"guide/change-detection/#integration-with-timeline","title":"Integration with Timeline","text":"<p>The change detection system integrates seamlessly with the timeline visualization: - Chronological change tracking - Visual difference display - Significance indicators - Filtering capabilities</p>"},{"location":"guide/change-detection/#troubleshooting","title":"Troubleshooting","text":""},{"location":"guide/change-detection/#common-issues","title":"Common Issues","text":"<ol> <li>False Positives</li> <li>Review ignore patterns</li> <li>Adjust similarity thresholds</li> <li> <p>Check dynamic content handling</p> </li> <li> <p>Missed Changes</p> </li> <li>Verify monitoring configuration</li> <li>Check website accessibility</li> <li>Review detection sensitivity</li> </ol>"},{"location":"guide/change-detection/#solutions","title":"Solutions","text":"<ul> <li>Update configuration parameters</li> <li>Implement additional filters</li> <li>Adjust monitoring frequency</li> <li>Review website structure changes</li> </ul> <p>For technical details about the implementation, refer to the Change Detection API.</p>"},{"location":"guide/configuration/","title":"Configuration Guide","text":""},{"location":"guide/configuration/#website-monitoring-settings","title":"Website Monitoring Settings","text":"<p>Configure which websites to monitor and how often to check for changes. Create a <code>website_config.json</code> file:</p> <pre><code>{\n  \"urls\": [\n    {\n      \"url\": \"https://example.com\",\n      \"check_interval\": \"1h\",\n      \"notify_on_change\": true,\n      \"monitor_sections\": [\"content\", \"links\", \"images\"],\n      \"ignore_patterns\": [\n        \"timestamp\",\n        \"advertisement\"\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"guide/configuration/#notification-settings","title":"Notification Settings","text":"<p>Configure notification preferences in <code>user_preferences.json</code>:</p> <pre><code>{\n  \"notifications\": {\n    \"email\": {\n      \"enabled\": true,\n      \"address\": \"your-email@example.com\"\n    },\n    \"minimum_significance\": 5,\n    \"notify_on\": [\"critical\", \"high\"]\n  }\n}\n</code></pre>"},{"location":"guide/configuration/#openai-integration","title":"OpenAI Integration","text":"<p>Set up the OpenAI API integration for change analysis:</p> <ol> <li> <p>Set your API key in the environment: <pre><code>export OPENAI_API_KEY=your_api_key_here\n</code></pre></p> </li> <li> <p>Configure analysis preferences: <pre><code>{\n  \"ai_settings\": {\n    \"model\": \"gpt-3.5-turbo\",\n    \"temperature\": 0.7,\n    \"analysis_depth\": \"detailed\",\n    \"significance_threshold\": 3\n  }\n}\n</code></pre></p> </li> </ol>"},{"location":"guide/configuration/#advanced-settings","title":"Advanced Settings","text":""},{"location":"guide/configuration/#change-detection","title":"Change Detection","text":"<p>Fine-tune change detection sensitivity:</p> <pre><code>{\n  \"detection\": {\n    \"text_similarity_threshold\": 0.8,\n    \"visual_diff_threshold\": 0.1,\n    \"min_changes_to_report\": 1\n  }\n}\n</code></pre>"},{"location":"guide/configuration/#timeline-visualization","title":"Timeline Visualization","text":"<p>Configure timeline display options:</p> <pre><code>{\n  \"timeline\": {\n    \"max_entries\": 100,\n    \"group_by\": \"url\",\n    \"sort_order\": \"newest_first\",\n    \"highlight_changes\": true\n  }\n}\n</code></pre> <p>For more detailed monitoring options, see the Monitoring Features guide.</p>"},{"location":"guide/getting-started/","title":"Getting Started","text":""},{"location":"guide/getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.11 or higher</li> <li>OpenAI API key for change analysis</li> <li>Chrome/Firefox for web scraping</li> <li>Git for version control</li> </ul>"},{"location":"guide/getting-started/#installation","title":"Installation","text":"<ol> <li> <p>Clone the repository: <pre><code>git clone https://github.com/manicmeta1/website-tracker.git\ncd website-tracker\n</code></pre></p> </li> <li> <p>Install dependencies: <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Configure environment variables: Create a <code>.env</code> file with: <pre><code>OPENAI_API_KEY=your_api_key_here\n</code></pre></p> </li> <li> <p>Start the application: <pre><code>streamlit run main.py\n</code></pre></p> </li> </ol> <p>The application will be available at <code>http://localhost:5000</code></p>"},{"location":"guide/getting-started/#first-steps","title":"First Steps","text":"<ol> <li>Add websites to monitor in the configuration section</li> <li>Set up monitoring preferences</li> <li>View the timeline of detected changes</li> <li>Configure notification settings</li> </ol>"},{"location":"guide/getting-started/#development-setup","title":"Development Setup","text":"<p>For development:</p> <ol> <li> <p>Install development dependencies: <pre><code>pip install -r requirements-dev.txt\n</code></pre></p> </li> <li> <p>Run tests: <pre><code>pytest\n</code></pre></p> </li> <li> <p>Build documentation locally: <pre><code>mkdocs serve\n</code></pre></p> </li> </ol> <p>Visit the Configuration Guide for detailed settings.</p>"},{"location":"guide/monitoring/","title":"Monitoring Features","text":""},{"location":"guide/monitoring/#overview","title":"Overview","text":"<p>Website Tracker provides comprehensive monitoring capabilities for tracking changes across multiple websites. This guide covers the available monitoring features and how to use them effectively.</p>"},{"location":"guide/monitoring/#key-features","title":"Key Features","text":""},{"location":"guide/monitoring/#real-time-monitoring","title":"Real-Time Monitoring","text":"<ul> <li>Continuous website monitoring with configurable intervals</li> <li>Instant detection of content changes</li> <li>Support for multiple URLs and pages</li> </ul>"},{"location":"guide/monitoring/#change-types-detected","title":"Change Types Detected","text":"<ul> <li>Text content modifications</li> <li>Link additions and removals</li> <li>Visual changes (layout, images)</li> <li>Menu structure updates</li> <li>Style modifications (fonts, colors)</li> </ul>"},{"location":"guide/monitoring/#setting-up-monitoring","title":"Setting Up Monitoring","text":""},{"location":"guide/monitoring/#basic-configuration","title":"Basic Configuration","text":"<ol> <li> <p>Add websites to monitor: <pre><code>{\n  \"url\": \"https://example.com\",\n  \"check_interval\": \"1h\",\n  \"notify_on_change\": true\n}\n</code></pre></p> </li> <li> <p>Configure monitoring preferences:</p> </li> <li>Set check intervals (e.g., hourly, daily)</li> <li>Define notification thresholds</li> <li>Specify areas to monitor</li> </ol>"},{"location":"guide/monitoring/#advanced-options","title":"Advanced Options","text":""},{"location":"guide/monitoring/#content-filtering","title":"Content Filtering","text":"<pre><code>{\n  \"ignore_patterns\": [\n    \"timestamp\",\n    \"advertisement\",\n    \"visitor-count\"\n  ],\n  \"focus_elements\": [\n    \".main-content\",\n    \"#product-section\"\n  ]\n}\n</code></pre>"},{"location":"guide/monitoring/#change-detection-sensitivity","title":"Change Detection Sensitivity","text":"<ul> <li>Adjust text similarity thresholds</li> <li>Configure visual difference detection</li> <li>Set minimum change requirements</li> </ul>"},{"location":"guide/monitoring/#viewing-changes","title":"Viewing Changes","text":""},{"location":"guide/monitoring/#timeline-view","title":"Timeline View","text":"<ul> <li>Chronological display of detected changes</li> <li>Filtering by date range and website</li> <li>Significance indicators for changes</li> </ul>"},{"location":"guide/monitoring/#visual-comparison","title":"Visual Comparison","text":"<ul> <li>Side-by-side change comparison</li> <li>Highlighted differences</li> <li>Before/after screenshots</li> </ul>"},{"location":"guide/monitoring/#notifications","title":"Notifications","text":""},{"location":"guide/monitoring/#configuration","title":"Configuration","text":"<ul> <li>Set up email notifications</li> <li>Configure significance thresholds</li> <li>Customize notification frequency</li> </ul>"},{"location":"guide/monitoring/#notification-types","title":"Notification Types","text":"<ol> <li>Critical Changes</li> <li>Major content updates</li> <li>Structure modifications</li> <li> <p>Pricing changes</p> </li> <li> <p>Standard Updates</p> </li> <li>Minor text changes</li> <li>Style updates</li> <li>New content additions</li> </ol>"},{"location":"guide/monitoring/#best-practices","title":"Best Practices","text":""},{"location":"guide/monitoring/#optimal-monitoring","title":"Optimal Monitoring","text":"<ol> <li>Set appropriate check intervals</li> <li>High-priority: 1-6 hours</li> <li>Standard: 12-24 hours</li> <li> <p>Low-priority: Weekly</p> </li> <li> <p>Configure ignore patterns</p> </li> <li>Dynamic content (timestamps, counters)</li> <li>Advertisements</li> <li>Session-specific elements</li> </ol>"},{"location":"guide/monitoring/#resource-management","title":"Resource Management","text":"<ul> <li>Balance check frequency with resource usage</li> <li>Use batch processing for multiple sites</li> <li>Implement caching strategies</li> </ul>"},{"location":"guide/monitoring/#troubleshooting","title":"Troubleshooting","text":""},{"location":"guide/monitoring/#common-issues","title":"Common Issues","text":"<ol> <li>False Positives</li> <li>Review ignore patterns</li> <li>Adjust sensitivity settings</li> <li> <p>Check for dynamic content</p> </li> <li> <p>Missed Changes</p> </li> <li>Verify monitoring configuration</li> <li>Check website accessibility</li> <li>Review detection thresholds</li> </ol> <p>For technical details about the monitoring implementation, see the API Documentation.</p>"}]}